use crate::*;

const F32_COMPARE_SHADER: &str = include_str!("../compute_shaders/f32/cmp.wgsl");
const F32_MIN_MAX_SHADER: &str = include_str!("../compute_shaders/f32/min_max.wgsl");

impl CompareType for f32 {
    const COMPARE_SHADER: &'static str = F32_COMPARE_SHADER;
    const MIN_MAX_SHADER: &'static str = F32_MIN_MAX_SHADER;
}

#[cfg(test)]
mod test {
    use arrow_gpu_array::array::*;
    use arrow_gpu_test_macros::*;

    use crate::*;

    test_array_op!(
        test_gt_f32_array_f32,
        Float32ArrayGPU,
        Float32ArrayGPU,
        BooleanArrayGPU,
        gt,
        gt_dyn,
        [
            Some(-1.0f32),
            Some(3.0),
            Some(-1.0f32),
            None,
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::INFINITY),
            Some(f32::NAN),
        ],
        [
            Some(0.0f32),
            Some(2.0),
            None,
            Some(3.0),
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(3.0),
        ],
        [
            Some(false),
            Some(true),
            None,
            None,
            None,
            Some(false),
            Some(false),
            Some(false),
            Some(false),
            Some(true),
            Some(false),
        ]
    );

    test_array_op!(
        test_gteq_f32_array_f32,
        Float32ArrayGPU,
        Float32ArrayGPU,
        BooleanArrayGPU,
        gteq,
        gteq_dyn,
        [
            Some(-1.0f32),
            Some(3.0),
            Some(-1.0f32),
            None,
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::INFINITY),
            Some(f32::NAN),
        ],
        [
            Some(0.0f32),
            Some(2.0),
            None,
            Some(3.0),
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(3.0),
        ],
        [
            Some(false),
            Some(true),
            None,
            None,
            None,
            Some(false),
            Some(true),
            Some(true),
            Some(false),
            Some(true),
            Some(false),
        ]
    );

    test_array_op!(
        test_lt_f32_array_f32,
        Float32ArrayGPU,
        Float32ArrayGPU,
        BooleanArrayGPU,
        lt,
        lt_dyn,
        [
            Some(-1.0f32),
            Some(3.0),
            Some(-1.0f32),
            None,
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::INFINITY),
            Some(f32::NAN),
        ],
        [
            Some(0.0f32),
            Some(2.0),
            None,
            Some(3.0),
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(3.0),
        ],
        [
            Some(true),
            Some(false),
            None,
            None,
            None,
            Some(false),
            Some(false),
            Some(false),
            Some(true),
            Some(false),
            Some(false),
        ]
    );

    test_array_op!(
        test_lteq_f32_array_f32,
        Float32ArrayGPU,
        Float32ArrayGPU,
        BooleanArrayGPU,
        lteq,
        lteq_dyn,
        [
            Some(-1.0f32),
            Some(3.0),
            Some(-1.0f32),
            None,
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::INFINITY),
            Some(f32::NAN),
        ],
        [
            Some(0.0f32),
            Some(2.0),
            None,
            Some(3.0),
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(3.0),
        ],
        [
            Some(true),
            Some(false),
            None,
            None,
            None,
            Some(false),
            Some(true),
            Some(true),
            Some(true),
            Some(false),
            Some(false),
        ]
    );

    test_array_op!(
        test_eq_f32_array_f32,
        Float32ArrayGPU,
        Float32ArrayGPU,
        BooleanArrayGPU,
        eq,
        eq_dyn,
        [
            Some(0.0f32),
            Some(3.0),
            Some(-1.0f32),
            None,
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::INFINITY),
            Some(f32::NAN),
        ],
        [
            Some(0.0f32),
            Some(2.0),
            None,
            Some(3.0),
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(3.0),
        ],
        [
            Some(true),
            Some(false),
            None,
            None,
            None,
            Some(false),
            Some(true),
            Some(true),
            Some(false),
            Some(false),
            Some(false),
        ]
    );

    test_float_array_op!(
        test_max_f32_array_f32,
        Float32ArrayGPU,
        Float32ArrayGPU,
        Float32ArrayGPU,
        max,
        max_dyn,
        [
            Some(-1.0f32),
            Some(3.0),
            Some(-1.0f32),
            None,
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::INFINITY),
            Some(f32::NAN),
        ],
        [
            Some(0.0f32),
            Some(2.0),
            None,
            Some(3.0),
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(3.0),
        ],
        [
            Some(0.0),
            Some(3.0),
            None,
            None,
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::INFINITY),
            Some(f32::INFINITY),
            Some(3.0),
        ]
    );

    test_float_array_op!(
        test_min_f32_array_f32,
        Float32ArrayGPU,
        Float32ArrayGPU,
        Float32ArrayGPU,
        min,
        min_dyn,
        [
            Some(-1.0f32),
            Some(3.0),
            Some(-1.0f32),
            None,
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::INFINITY),
            Some(f32::NAN),
        ],
        [
            Some(0.0f32),
            Some(2.0),
            None,
            Some(3.0),
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(3.0),
        ],
        [
            Some(-1.0),
            Some(2.0),
            None,
            None,
            None,
            Some(f32::NAN),
            Some(f32::INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::NEG_INFINITY),
            Some(f32::NEG_INFINITY),
            Some(3.0),
        ]
    );
}
